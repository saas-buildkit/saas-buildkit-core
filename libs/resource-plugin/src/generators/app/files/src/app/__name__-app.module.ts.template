import { Module, Logger } from '@nestjs/common';
import * as path from 'node:path';
import * as Controllers from './controllers';
<% if (db) { %>
import * as Entities from './database/entities';
import * as Repositories from './repositories';
<% } %>
import * as Services from './services';
<% if (db) { %>
import { TypeOrmModule } from '@nestjs/typeorm';
import { setupTypeormModule } from '@softkit/typeorm';
<% } %>
import <%= pascalCase(name) -%>RootConfig from './config/<%= name -%>-root.config';
<% if (auth) { %>
import { APP_GUARD } from '@nestjs/core';
import { JwtModule, JwtService } from '@nestjs/jwt';
import {
  JwtAuthGuard,
  JwtStrategy,
  PermissionsGuard,
  TokenService,
} from '@softkit/auth';
<% } %>
<% if (i18n) { %>
import { setupI18NModule } from '@softkit/i18n';
<% } %>

import { setupLoggerModule } from '@softkit/logger';
import { setupYamlBaseConfigModule } from '@softkit/config';
import { setupClsModule } from '@softkit/async-storage';
<% if (health) { %>
import { HealthCheckModule } from '@softkit/healthcheck';
<% } %>

@Module({
  imports: [
<% if (auth) { %>
    JwtModule,
<% } %>
<% if (i18n) { %>
    setupI18NModule(__dirname),
<% } %>
    setupLoggerModule(),
    setupYamlBaseConfigModule(path.join(__dirname, './assets'), <%= pascalCase(name) -%>RootConfig),
    setupClsModule(),
<% if (health) { %>
    HealthCheckModule,
<% } %>
<% if (db) { %>
    TypeOrmModule.forFeature(Object.values(Entities)),
    setupTypeormModule(__dirname),
<% } %>
  ],
  controllers: Object.values(Controllers),
  providers: [
    ...Object.values(Services),
    ...Object.values(Repositories),
    Logger,
<% if (auth) { %>
    JwtStrategy,
    JwtService,
    TokenService,
    {
      provide: APP_GUARD,
      useClass: JwtAuthGuard,
    },
    {
      provide: APP_GUARD,
      useClass: PermissionsGuard,
    },
<% } %>
  ],
})
export class <%= pascalCase(name) -%>AppModule {}
